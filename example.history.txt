// создаем группу людей

CREATE (temp:PEOPLE {name: "Влас", city: "Архангельск"}) 
CREATE (other:PEOPLE {name: "Зиновий", city: "Воронеж"}) 
CREATE (d:PEOPLE {name: "Артемий", city: "Калининград"}) 
CREATE (man:PEOPLE {name: "Валентин", city: "Оренбург"}) 
CREATE (man:PEOPLE {name: "Дайна", city: "Херсон"}) 
CREATE (f:PEOPLE {name: "Логгин", city: "Великий Новгород"}) 
CREATE (c:PEOPLE {name: "Харитон", city: "Уфа"}) 
CREATE (c:PEOPLE {name: "Виолетта", city: "Хабаровск"}) 
CREATE (x:PEOPLE {name: "Иван", city: "Калининград"}) 
CREATE (person:PEOPLE {name: "Влас", city: "Смоленск"}) 
CREATE (f:PEOPLE {name: "Феоктист", city: "Якутск"}) 
CREATE (b:PEOPLE {name: "Гордей", city: "Тверь"}) 
// проверка команд

// создаем связь "знает" для людей

MATCH (person:PEOPLE) WHERE person.name = 'Влас' MATCH (human:PEOPLE) WHERE human.name <> person.name MERGE (person)-[r:KNEW]->(human) RETURN count(r)
MATCH (some:PEOPLE) WHERE some.name = 'Зиновий' MATCH (a:PEOPLE) WHERE a.name <> some.name MERGE (some)-[rel:KNEW]->(a) RETURN count(rel)
MATCH (f:PEOPLE)  MATCH (a:PEOPLE) WHERE f.name IN ['Влас', 'Артемий', 'Дайна', 'Харитон', 'Влас', 'Феоктист'] MATCH (f) - [u:KNEW] -> (a) RETURN count(u)
MATCH (some:PEOPLE) WHERE some.name = 'Артемий' MATCH (a:PEOPLE) WHERE a.name <> some.name MERGE (some)-[r:KNEW]->(a) RETURN count(r)
MATCH (e:PEOPLE {name: 'Влас'})  MATCH path=(e:PEOPLE {name: 'Влас'}) - [rel:KNEW*2] -> (b:PEOPLE) RETURN path
MATCH (x:PEOPLE) WHERE x.name = 'Валентин' MATCH (temp:PEOPLE) WHERE temp.name <> x.name MERGE (x)-[relationship:KNEW]->(temp) RETURN count(relationship)
MATCH (f:PEOPLE)  MATCH path=(f:PEOPLE) - [follow:KNEW*2] -> (some:PEOPLE {name: 'Дайна'}) RETURN path
MATCH (person:PEOPLE)  MATCH path=(person:PEOPLE) - [to:KNEW*2] -> (temp:PEOPLE {name: 'Логгин'}) RETURN path
MATCH (b:PEOPLE) WHERE b.name = 'Дайна' MATCH (c:PEOPLE) WHERE c.name <> b.name MERGE (b)-[k:KNEW]->(c) RETURN count(k)
MATCH (other:PEOPLE)  MATCH (some:PEOPLE {name: 'Дайна'}) WHERE other.name IN ['Влас', 'Харитон', 'Иван'] MATCH (other) - [relation:KNEW] -> (some) RETURN count(relation)
MATCH (d:PEOPLE) WHERE d.name = 'Логгин' MATCH (e:PEOPLE) WHERE e.name <> d.name MERGE (d)-[u:KNEW]->(e) RETURN count(u)
MATCH (d:PEOPLE {name: 'Артемий'})  MATCH (a:PEOPLE {name: 'Влас'})  MATCH (d) - [relationship:KNEW] -> (a) RETURN count(relationship)
MATCH (a:PEOPLE {name: 'Виолетта'})  RETURN a
MATCH (person:PEOPLE) WHERE person.name = 'Харитон' MATCH (human:PEOPLE) WHERE human.name <> person.name MERGE (person)-[to:KNEW]->(human) RETURN count(to)
MATCH (d:PEOPLE {name: 'Дайна'})  RETURN d
MATCH (me:PEOPLE {name: 'Дайна'}) WHERE me.name IN ['Зиновий', 'Валентин', 'Дайна', 'Харитон', 'Влас', 'Феоктист', 'Гордей'] RETURN me
MATCH (some:PEOPLE) WHERE some.name = 'Виолетта' MATCH (a:PEOPLE) WHERE a.name <> some.name MERGE (some)-[r:KNEW]->(a) RETURN count(r)
MATCH (d:PEOPLE)  MATCH (temporary:PEOPLE {name: 'Зиновий'})  MATCH (d) - [r:KNEW] -> (temporary) RETURN count(r)
MATCH (d:PEOPLE) WHERE d.name = 'Иван' MATCH (e:PEOPLE) WHERE e.name <> d.name MERGE (d)-[relationship:KNEW]->(e) RETURN count(relationship)
MATCH (other:PEOPLE) WHERE other.name = 'Влас' MATCH (person:PEOPLE) WHERE person.name <> other.name MERGE (other)-[relation:KNEW]->(person) RETURN count(relation)
MATCH (c:PEOPLE) WHERE c.name = 'Феоктист' MATCH (d:PEOPLE) WHERE d.name <> c.name MERGE (c)-[r:KNEW]->(d) RETURN count(r)
MATCH (person:PEOPLE) WHERE person.name = 'Гордей' MATCH (human:PEOPLE) WHERE human.name <> person.name MERGE (person)-[to:KNEW]->(human) RETURN count(to)
MATCH (b:PEOPLE)  MATCH path=(b:PEOPLE) - [u:KNEW*2] -> (c:PEOPLE) RETURN path
// задаем тип связи - 'нравится' для: 'Влас'

MATCH (person:PEOPLE { name: 'Влас' })  MATCH (human:PEOPLE) WHERE human.name IN ["Артемий", "Дайна", "Виолетта"] AND human.name <> person.name MERGE (person)-[rel:KNEW]->(human) SET rel.tyre_like='нравится' RETURN rel
// задаем тип связи - 'любит' для: 'Влас'

MATCH (me:PEOPLE) WHERE me.name = 'Влас' MATCH (other:PEOPLE) WHERE other.name IN ["Дайна"] AND other.name <> me.name MERGE (me)-[follow:KNEW]->(other) SET follow.tyre_love='любит' RETURN follow
// проверка созданных связей

MATCH (other:PEOPLE {name: 'Иван'})  MATCH (other:PEOPLE) WHERE other.name IN ['Зиновий', 'Дайна', 'Логгин', 'Виолетта', 'Иван', 'Гордей'] MATCH (other) - [follow:KNEW] -> (other) RETURN count(follow)
// задаем тип связи - 'нравится' для: 'Зиновий'

MATCH (temp:PEOPLE { name: 'Зиновий' })  MATCH (temporary:PEOPLE) WHERE temporary.name IN ["Валентин", "Дайна", "Виолетта"] AND temporary.name <> temp.name MERGE (temp)-[relation:KNEW]->(temporary) SET relation.tyre_like='нравится' RETURN relation
// задаем тип связи - 'дружат' для: 'Зиновий'

MATCH (temporary:PEOPLE { name: 'Зиновий' })  MATCH (me:PEOPLE) WHERE me.name IN ["Валентин"] AND me.name <> temporary.name MERGE (temporary)-[relation:KNEW]->(me) SET relation.tyre_be_friends='дружат' RETURN relation
// задаем тип связи - 'любит' для: 'Зиновий'

MATCH (e:PEOPLE) WHERE e.name = 'Зиновий' MATCH (f:PEOPLE) WHERE f.name IN ["Виолетта"] AND f.name <> e.name MERGE (e)-[r:KNEW]->(f) SET r.tyre_love='любит' RETURN r
// задаем тип связи - 'не любит' для: 'Зиновий'

MATCH (c:PEOPLE) WHERE c.name = 'Зиновий' MATCH (d:PEOPLE) WHERE d.name IN ["Харитон", "Иван", "Феоктист"] AND d.name <> c.name MERGE (c)-[k:KNEW]->(d) SET k.tyre_dislike='не любит' RETURN k
// задаем тип связи - 'враждует с' для: 'Зиновий'

MATCH (man:PEOPLE) WHERE man.name = 'Зиновий' MATCH (some:PEOPLE) WHERE some.name IN ["Харитон"] AND some.name <> man.name MERGE (man)-[r:KNEW]->(some) SET r.tyre_feud='враждует с' RETURN r
// задаем тип связи - 'должен' для: 'Зиновий'

MATCH (some:PEOPLE { name: 'Зиновий' })  MATCH (a:PEOPLE) WHERE a.name IN ["Валентин"] AND a.name <> some.name MERGE (some)-[relation:KNEW]->(a) SET relation.tyre_loan='должен' RETURN relation
// задаем тип связи - 'помогает' для: 'Зиновий'

MATCH (man:PEOPLE) WHERE man.name = 'Зиновий' MATCH (some:PEOPLE) WHERE some.name IN ["Виолетта"] AND some.name <> man.name MERGE (man)-[relation:KNEW]->(some) SET relation.tyre_help='помогает' RETURN relation
// проверка созданных связей

MATCH (temp:PEOPLE {name: 'Иван'})  MATCH (d:PEOPLE)  MATCH (temp) - [r:KNEW] -> (d) RETURN count(r)
// задаем тип связи - 'нравится' для: 'Артемий'

MATCH (b:PEOPLE { name: 'Артемий' })  MATCH (c:PEOPLE) WHERE c.name IN ["Дайна", "Логгин", "Виолетта"] AND c.name <> b.name MERGE (b)-[u:KNEW]->(c) SET u.tyre_like='нравится' RETURN u
// задаем тип связи - 'любит' для: 'Артемий'

MATCH (man:PEOPLE { name: 'Артемий' })  MATCH (some:PEOPLE) WHERE some.name IN ["Дайна"] AND some.name <> man.name MERGE (man)-[k:KNEW]->(some) SET k.tyre_love='любит' RETURN k
// проверка созданных связей

MATCH (c:PEOPLE)  MATCH (d:PEOPLE) WHERE c.name IN ['Влас', 'Зиновий', 'Валентин', 'Харитон'] MATCH (c) - [relation:KNEW] -> (d) RETURN count(relation)
// задаем тип связи - 'нравится' для: 'Валентин'

MATCH (c:PEOPLE) WHERE c.name = 'Валентин' MATCH (d:PEOPLE) WHERE d.name IN ["Зиновий", "Дайна", "Харитон", "Виолетта"] AND d.name <> c.name MERGE (c)-[follow:KNEW]->(d) SET follow.tyre_like='нравится' RETURN follow
// задаем тип связи - 'дружат' для: 'Валентин'

MATCH (c:PEOPLE) WHERE c.name = 'Валентин' MATCH (d:PEOPLE) WHERE d.name IN ["Зиновий", "Харитон"] AND d.name <> c.name MERGE (c)-[follow:KNEW]->(d) SET follow.tyre_be_friends='дружат' RETURN follow
// задаем тип связи - 'любит' для: 'Валентин'

MATCH (c:PEOPLE { name: 'Валентин' })  MATCH (d:PEOPLE) WHERE d.name IN ["Виолетта"] AND d.name <> c.name MERGE (c)-[u:KNEW]->(d) SET u.tyre_love='любит' RETURN u
// задаем тип связи - 'не любит' для: 'Валентин'

MATCH (temporary:PEOPLE) WHERE temporary.name = 'Валентин' MATCH (me:PEOPLE) WHERE me.name IN ["Харитон", "Иван", "Феоктист"] AND me.name <> temporary.name MERGE (temporary)-[follow:KNEW]->(me) SET follow.tyre_dislike='не любит' RETURN follow
// задаем тип связи - 'враждует с' для: 'Валентин'

MATCH (a:PEOPLE { name: 'Валентин' })  MATCH (b:PEOPLE) WHERE b.name IN ["Феоктист"] AND b.name <> a.name MERGE (a)-[relationship:KNEW]->(b) SET relationship.tyre_feud='враждует с' RETURN relationship
// задаем тип связи - 'помогает' для: 'Валентин'

MATCH (f:PEOPLE) WHERE f.name = 'Валентин' MATCH (x:PEOPLE) WHERE x.name IN ["Виолетта"] AND x.name <> f.name MERGE (f)-[r:KNEW]->(x) SET r.tyre_help='помогает' RETURN r
// проверка созданных связей

// задаем тип связи - 'нравится' для: 'Дайна'

MATCH (person:PEOPLE { name: 'Дайна' })  MATCH (human:PEOPLE) WHERE human.name IN ["Влас", "Зиновий", "Артемий", "Валентин", "Логгин", "Харитон", "Виолетта", "Иван", "Влас", "Феоктист", "Гордей"] AND human.name <> person.name MERGE (person)-[r:KNEW]->(human) SET r.tyre_like='нравится' RETURN r
// задаем тип связи - 'любит' для: 'Дайна'

MATCH (some:PEOPLE { name: 'Дайна' })  MATCH (a:PEOPLE) WHERE a.name IN ["Харитон"] AND a.name <> some.name MERGE (some)-[to:KNEW]->(a) SET to.tyre_love='любит' RETURN to
// проверка созданных связей

MATCH (some:PEOPLE)  MATCH path=(some:PEOPLE) - [relation:KNEW*2] -> (x:PEOPLE {name: 'Виолетта'}) RETURN path
MATCH (person:PEOPLE {name: 'Феоктист'})  MATCH (me:PEOPLE)  MATCH (person) - [to:KNEW] -> (me) RETURN count(to)
// задаем тип связи - 'нравится' для: 'Логгин'

MATCH (other:PEOPLE { name: 'Логгин' })  MATCH (person:PEOPLE) WHERE person.name IN ["Дайна", "Виолетта", "Иван", "Влас"] AND person.name <> other.name MERGE (other)-[k:KNEW]->(person) SET k.tyre_like='нравится' RETURN k
// задаем тип связи - 'дружат' для: 'Логгин'

MATCH (man:PEOPLE) WHERE man.name = 'Логгин' MATCH (some:PEOPLE) WHERE some.name IN ["Влас"] AND some.name <> man.name MERGE (man)-[to:KNEW]->(some) SET to.tyre_be_friends='дружат' RETURN to
// задаем тип связи - 'должен' для: 'Логгин'

MATCH (d:PEOPLE) WHERE d.name = 'Логгин' MATCH (e:PEOPLE) WHERE e.name IN ["Влас"] AND e.name <> d.name MERGE (d)-[to:KNEW]->(e) SET to.tyre_loan='должен' RETURN to
// задаем тип связи - 'угрожает' для: 'Логгин'

MATCH (me:PEOPLE { name: 'Логгин' })  MATCH (other:PEOPLE) WHERE other.name IN ["Влас"] AND other.name <> me.name MERGE (me)-[k:KNEW]->(other) SET k.tyre_criminal='угрожает' RETURN k
// проверка созданных связей

MATCH (b:PEOPLE)  RETURN b
MATCH (temporary:PEOPLE)  RETURN temporary
// задаем тип связи - 'нравится' для: 'Харитон'

MATCH (x:PEOPLE { name: 'Харитон' })  MATCH (temp:PEOPLE) WHERE temp.name IN ["Валентин", "Дайна"] AND temp.name <> x.name MERGE (x)-[relation:KNEW]->(temp) SET relation.tyre_like='нравится' RETURN relation
// задаем тип связи - 'дружат' для: 'Харитон'

MATCH (human:PEOPLE { name: 'Харитон' })  MATCH (man:PEOPLE) WHERE man.name IN ["Валентин"] AND man.name <> human.name MERGE (human)-[to:KNEW]->(man) SET to.tyre_be_friends='дружат' RETURN to
// задаем тип связи - 'любит' для: 'Харитон'

MATCH (f:PEOPLE { name: 'Харитон' })  MATCH (x:PEOPLE) WHERE x.name IN ["Дайна"] AND x.name <> f.name MERGE (f)-[k:KNEW]->(x) SET k.tyre_love='любит' RETURN k
// проверка созданных связей

// задаем тип связи - 'нравится' для: 'Виолетта'

MATCH (man:PEOPLE) WHERE man.name = 'Виолетта' MATCH (some:PEOPLE) WHERE some.name IN ["Харитон", "Иван", "Феоктист"] AND some.name <> man.name MERGE (man)-[to:KNEW]->(some) SET to.tyre_like='нравится' RETURN to
// задаем тип связи - 'любит' для: 'Виолетта'

MATCH (temporary:PEOPLE) WHERE temporary.name = 'Виолетта' MATCH (me:PEOPLE) WHERE me.name IN ["Харитон"] AND me.name <> temporary.name MERGE (temporary)-[u:KNEW]->(me) SET u.tyre_love='любит' RETURN u
// задаем тип связи - 'ненавидит' для: 'Виолетта'

MATCH (temporary:PEOPLE { name: 'Виолетта' })  MATCH (me:PEOPLE) WHERE me.name IN ["Дайна"] AND me.name <> temporary.name MERGE (temporary)-[to:KNEW]->(me) SET to.tyre_hate='ненавидит' RETURN to
// проверка созданных связей

MATCH (b:PEOPLE {name: 'Иван'})  MATCH (a:PEOPLE {name: 'Гордей'}) WHERE b.name IN ['Влас', 'Зиновий', 'Валентин'] MATCH (b) - [relation:KNEW] -> (a) RETURN count(relation)
// задаем тип связи - 'нравится' для: 'Иван'

MATCH (d:PEOPLE { name: 'Иван' })  MATCH (e:PEOPLE) WHERE e.name IN ["Дайна", "Гордей"] AND e.name <> d.name MERGE (d)-[k:KNEW]->(e) SET k.tyre_like='нравится' RETURN k
// задаем тип связи - 'любит' для: 'Иван'

MATCH (e:PEOPLE { name: 'Иван' })  MATCH (f:PEOPLE) WHERE f.name IN ["Дайна"] AND f.name <> e.name MERGE (e)-[relationship:KNEW]->(f) SET relationship.tyre_love='любит' RETURN relationship
// задаем тип связи - 'должен' для: 'Иван'

MATCH (some:PEOPLE { name: 'Иван' })  MATCH (a:PEOPLE) WHERE a.name IN ["Гордей"] AND a.name <> some.name MERGE (some)-[relation:KNEW]->(a) SET relation.tyre_loan='должен' RETURN relation
// задаем тип связи - 'помогает' для: 'Иван'

MATCH (other:PEOPLE) WHERE other.name = 'Иван' MATCH (person:PEOPLE) WHERE person.name IN ["Гордей"] AND person.name <> other.name MERGE (other)-[to:KNEW]->(person) SET to.tyre_help='помогает' RETURN to
// проверка созданных связей

MATCH (temp:PEOPLE) WHERE temp.name IN ['Артемий', 'Логгин', 'Виолетта', 'Иван', 'Влас', 'Феоктист', 'Гордей'] RETURN temp
// задаем тип связи - 'нравится' для: 'Влас'

MATCH (me:PEOPLE { name: 'Влас' })  MATCH (other:PEOPLE) WHERE other.name IN ["Дайна", "Логгин", "Виолетта"] AND other.name <> me.name MERGE (me)-[relation:KNEW]->(other) SET relation.tyre_like='нравится' RETURN relation
// задаем тип связи - 'дружат' для: 'Влас'

MATCH (some:PEOPLE) WHERE some.name = 'Влас' MATCH (a:PEOPLE) WHERE a.name IN ["Логгин"] AND a.name <> some.name MERGE (some)-[relationship:KNEW]->(a) SET relationship.tyre_be_friends='дружат' RETURN relationship
// задаем тип связи - 'любит' для: 'Влас'

MATCH (a:PEOPLE { name: 'Влас' })  MATCH (b:PEOPLE) WHERE b.name IN ["Дайна"] AND b.name <> a.name MERGE (a)-[follow:KNEW]->(b) SET follow.tyre_love='любит' RETURN follow
// проверка созданных связей

// задаем тип связи - 'нравится' для: 'Феоктист'

MATCH (person:PEOPLE { name: 'Феоктист' })  MATCH (human:PEOPLE) WHERE human.name IN ["Артемий", "Дайна"] AND human.name <> person.name MERGE (person)-[k:KNEW]->(human) SET k.tyre_like='нравится' RETURN k
// задаем тип связи - 'любит' для: 'Феоктист'

MATCH (me:PEOPLE { name: 'Феоктист' })  MATCH (other:PEOPLE) WHERE other.name IN ["Дайна"] AND other.name <> me.name MERGE (me)-[rel:KNEW]->(other) SET rel.tyre_love='любит' RETURN rel
// проверка созданных связей

// задаем тип связи - 'нравится' для: 'Гордей'

MATCH (x:PEOPLE) WHERE x.name = 'Гордей' MATCH (temp:PEOPLE) WHERE temp.name IN ["Дайна", "Харитон", "Виолетта"] AND temp.name <> x.name MERGE (x)-[u:KNEW]->(temp) SET u.tyre_like='нравится' RETURN u
// проверка созданных связей

MATCH (me:PEOPLE {name: 'Харитон'})  MATCH (e:PEOPLE) WHERE me.name IN ['Влас', 'Логгин', 'Харитон', 'Виолетта'] MATCH (me) - [rel:KNEW] -> (e) RETURN count(rel)
MATCH (x:PEOPLE {name: 'Харитон'}) WHERE x.name IN ['Логгин', 'Иван', 'Влас'] RETURN x